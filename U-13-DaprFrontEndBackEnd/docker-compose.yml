version: '3.4'

services:
  bookdemoweb:
    ports:
      - "40000:80"
    image: ${DOCKER_REGISTRY-}bookdemoweb
    build:
      context: .
      dockerfile: DomainCentricDemo.Web/Dockerfile
    environment:
      "ASPNETCORE_ENVIRONMENT": "Development"
      "ASPNETCORE_URLS": "http://+:80"
      "ConnectionStrings:DefaultConnection": "Server=host.docker.internal;Database=BookDbUsers;User Id=docker; Password=docker1234;Trusted_Connection=False;MultipleActiveResultSets=true; TrustServerCertificate=true"

  bookweb-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", "-app-id", "bookdemoweb", "-app-port", "80", "-dapr-http-port", "30000", "-dapr-grpc-port", "3600", "-components-path", "/components"]
    volumes:
      - "./components/:/components"
    depends_on:
      - bookdemoweb
      - redis
    network_mode: "service:bookdemoweb" 


  weatherdemoapi:
    ports:
      - "40001:80"
    image: ${DOCKER_REGISTRY-}weatherdemoapi
    build:
      context: .
      dockerfile: DemoApi/Dockerfile
    environment:    
      "ASPNETCORE_ENVIRONMENT": "Development"
      "ASPNETCORE_URLS": "http://+:80"

  weatherservice-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", "-app-id", "weatherdemoapi", "-app-port", "80", "-dapr-http-port", "31000", "-dapr-grpc-port", "3700"]
    depends_on:
      - weatherdemoapi
    network_mode: "service:weatherdemoapi" 


  bookdemoapi:
    ports:
      - "40002:80"
    image: ${DOCKER_REGISTRY-}bookdemoapi
    build:
      context: .
      dockerfile: DomainCentricDemo.Api/Dockerfile
    environment:    
      "ASPNETCORE_ENVIRONMENT": "Development"
      "ASPNETCORE_URLS": "http://+:80"
      "ConnectionStrings:BookConnectionString": "Server=host.docker.internal;Database=BookDb;User Id=docker; Password=docker1234;Trusted_Connection=False;MultipleActiveResultSets=true; TrustServerCertificate=true"
 
  bookservice-dapr:
    image: "daprio/daprd:latest"
    command: ["./daprd", "-app-id", "bookdemoapi", "-app-port", "80", "-dapr-http-port", "32000", "-dapr-grpc-port", "3800", "-components-path", "/components"]
    depends_on:
      - bookdemoapi
      - redis
    network_mode: "service:bookdemoapi" 

  redis:
    image: redis
    hostname: redisstate
    ports:
      - "6379:6379"
    # volumes:
    #   - ./redisdata:/data
    # command: redis-server --appendonly yes
